# denoise_text.yml
# Strategy for reducing a single long text by removing redundant or irrelevant information.

# meta: {"name": "name", "type": "string", "default": "", "example": "De-Noise Text ..."}
# name of the strategy
name: Clean

# meta: {"name": "description", "type": "string", "default": "", "example": ""}
# description of the strategy
description: >
    This strategy reduces a single "Unformatted Text" to a single "Formatted Text"
    by removing redundant, non-relevant, or overly emphasized information.
    Poluted texts can be search results, forum posts, or other long badly written texts.
    Text Cleaning includes:
    1. **Text De-noising**: Remove irrelevant details such as advertisements, 
        cookie disclaimers, or metadata that detract from the core message.
        Remove headers that sound relevant but contain no relevant content. (parsing errors)
    2. **Redundancy Cleansing**: Identify and eliminate repetitive information, 
        overly emphasized ideas or long exhaustive explanations.
    3. **Relevance Filtering**: Retain only content relevant to the main topic, like formulas,
        code snipptest and core ideas, while omitting tangential or background details.
    4. **Content Pruning**: Focus on trimming away non-essential texts while keeping 
        the most important parts intact.
    5. **Formula and Code Retention**: It is essential to preserve formulas, code snippets, 
        or other technical details that are relevant to the topic.

# meta: {"name": "example", "type": "string", "default": "", "example": ""}
# example on how to precede when solving a task
example: >
    Here is an illustrative example, to be used as a template or guide:
    Assume the example scenario: "What happens when foxes meet dogs?".
    
    - Example "Unformatted Text":
        The quick, agile fox leaps with great grace and speed over the lazy, 
        lethargic, motionless [still, stiff] dog who doesn't even twitch. The dog even ...
        This might not be the case if the dog is awake and doesnt like foxes. Here is why, ...
        copyright: dogs.com, dogs have silly ears and a wagging tail.
        You can get more information about foxes on foxes.com.
        The fox's nimble movements showcase its sharp reflexes and unmatched agility.
        Meanwhile, a rabbit watches from the bushes. Rabbits are ...
        Here is a formula I found regarding the agility ratio. I am not completely conviced...
        Formula: fox_agility = dog_agility * 2 - turtle_agility
        ```python
        fox_agility = dog_agility * 2 - turtle-agility
        ```
        Impressum: WeAreFoxes Ltd Fox RD 1234, ...
        cookie disclaimer: We use cookies to improve your browsing experience. Please, ...
        Please sign up for our newsletter to get more information about foxes and dogs.

    - Example nicely formatted "Formatted Text":
        # Foxes meet Dogs
        This text explores the behavior of foxes and dogs when they meet.
        # Behavioral Properties
        ## Foxes behavioral properties
        Foxes are agile and graceful animals.
        ## Dog's behavioral properties
        Dogs are sometimes lazy and motionless.
        # What happens when Foxes meet dogs
        Due to its agility, the quick fox leaps over the lazy dog.
        ## Foxses meet dog formula:
        The relationship between the fox's and dog's agility can be described as follows:
        ```python
        fox_agility = dog_agility * 2 - turtle-agility
        ```
        # Sources
        - dogs.com
        - foxes.com
      
      This examle output retains the core idea of the fox leaping over the dog while removing 
      redundant details such as over-emphasizing the fox's agility or the dog's lethargy, 
      which are not essential to the main message. 
      Note, Formulas often contain valuable insight, so it makes sense to keep them.
      However, the mentioning of the rabbit is not relevant given the scenario question.

# meta: {"name": "objective", "type": "string", "default": "", "example": ""}
# objective to be performed
objective: >
    The provided <poluted_text> must be cleaned up using the rules shown above. 
    The result should be a concise nicely formatted WikiPedia style article 
    containing only the most relevant information.

# meta: {"name": "your_task", "type": "string", "default": "", "example": ""}
# your_task to be performed
your_task: >
    Clean the text provided inside the <poluted_text> ... </poluted_text> tags ! 
    In particular keep and highlight contained __formulas__ and __code snippets__ 
    when relevant to the topic.

# meta: {"name": "validations", "type": "string", "default": "", "example": "markdown"}
# validations will veryfy the model response from this strategy
validations:
    expected_len:
        - 0.25
        - 0.99
    illegal_terms:
        - Foxes
        - foxes
        - Dogs
        - dogs
        - Foxes meet Dogs
        - fox_agility
    required_terms: null
    start_terms:
        - Here is the formatted ...
        - The formatted text ...

